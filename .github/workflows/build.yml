name: Build V8

on: push

jobs:
  for_linux:
    name: Build v8 on linux
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        compiler:
          - { name: gcc,    version: 7,       cc: gcc-7,      cxx: g++-7,       libcxx: libstdc++ }
          - { name: gcc,    version: 8,       cc: gcc-8,      cxx: g++-8,       libcxx: libstdc++ }
          - { name: gcc,    version: 9,       cc: gcc-9,      cxx: g++-9,       libcxx: libstdc++ }
          - { name: clang,  version: '6.0',   cc: clang-6.0,  cxx: clang++-6.0, libcxx: libstdc++ }
          - { name: clang,  version: '7.0',   cc: clang-7,    cxx: clang++-7,   libcxx: libstdc++ }
          - { name: clang,  version: 8,       cc: clang-8,    cxx: clang++-8,   libcxx: libstdc++ }
        conan_page: [1, 2]
    env:
      COMPILER_NAME: ${{ matrix.compiler.name }}
      COMPILER_VERSION: ${{ matrix.compiler.version }}
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
      LIBCXX: ${{ matrix.compiler.libcxx }}
      CONAN_CURRENT_PAGE: ${{ matrix.conan_page }}
      CONAN_TOTAL_PAGES: 2
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8' 
          architecture: 'x64'

      - name: Install compiler
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo apt-add-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal main"
          sudo apt-get update
          sudo apt-get install -y -qq --no-install-recommends ${{ matrix.compiler.cc }} ${{ matrix.compiler.cxx }} libc++-dev

      - name: Install dependencies
        run: .ci/install_linux_deps.sh

      - name: Build V8
        shell: bash -l {0}
        run: |
          python build.py

  for_macos:
    name: Build v8 on MacOS
    runs-on: macos-latest
    strategy:
      matrix:
        conan_page: [1, 2, 3, 4, 5, 6]
    env:
      CONAN_CURRENT_PAGE: ${{ matrix.conan_page }}
      CONAN_TOTAL_PAGES: 6
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8' 
          architecture: 'x64'

      - name: Install dependencies
        run: .ci/install_macos_deps.sh

      - name: Build V8
        shell: bash -e {0}
        run: |
          echo "$(which python)"
          python build.py
  
  for_windows:
    name: Build v8 on Windows
    runs-on: windows-latest
    strategy:
      matrix:
        conan_page: [1, 2, 3, 4]
    env:
      CONAN_CURRENT_PAGE: ${{ matrix.conan_page }}
      CONAN_TOTAL_PAGES: 4
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8' 
          architecture: 'x64'

      - name: Install Conan
        run: |
          pip3 install wheel setuptools
          pip3 install conan --upgrade
          pip3 install conan_package_tools bincrafters_package_tools
          conan user

      - name: Build V8
        shell: powershell
        run: |
          python build.py
